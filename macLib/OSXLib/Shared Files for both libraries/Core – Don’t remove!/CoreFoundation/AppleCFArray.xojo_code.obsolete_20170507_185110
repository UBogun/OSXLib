#tag Class
Protected Class AppleCFArray
Inherits AppleCFObject
	#tag Method, Flags = &h0, Description = 43616C6C7320612066756E6374696F6E206F6E636520666F72206561636820656C656D656E7420696E2072616E676520696E20616E2061727261792E
		Sub ApplyFunction(Applier as Appleblock, range as coreFoundationFrameWork.CFRange, context as ptr)
		  CFArrayApplyFunction mcftyperef, range, applier.Handle, context
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CallbackTemplate(allocator as ptr, value as ptr)
		  // This is a template for a callback block used by CFArray.
		  // Use it to build an appleblock wchich can be forwarded to several methods.
		  
		  #pragma unused allocator
		  #pragma unused value
		End Sub
	#tag EndMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Sub CFArrayApplyFunction Lib CoreFoundationLibName (id as ptr, range as corefoundationframework . cfrange, applier as ptr, context as ptr)
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function CFArrayContainsValue Lib CoreFoundationLibName (id as ptr, range as corefoundationframework . cfrange, value as ptr) As Boolean
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function CFArrayCreate Lib CoreFoundationLibName (allocator as ptr, data as ptr, numvalues as int32, callback as ptr) As Ptr
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function CFArrayCreateCopy Lib CoreFoundationLibName (allocator as ptr, id as ptr) As Ptr
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function CFArrayGetCount Lib CoreFoundationLibName (id as ptr) As Int32
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function CFArrayGetCountOfValue Lib CoreFoundationLibName (id as ptr, Range as corefoundationFramework . CFRAnge, value as Ptr) As Int32
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function CFArrayGetFirstIndexOfValue Lib CoreFoundationLibName (id as ptr, Range as corefoundationFramework . CFRAnge, value as Ptr) As Int32
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function CFArrayGetLastIndexOfValue Lib CoreFoundationLibName (id as ptr, Range as corefoundationFramework . CFRAnge, value as Ptr) As Int32
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function CFArrayGetValueAtIndex Lib CoreFoundationLibName (id as ptr, index as int32) As Ptr
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Sub CFArrayGetValues Lib CoreFoundationLibName (id as ptr, range as corefoundationframework . cfrange, values as ptr)
	#tag EndExternalMethod

	#tag Method, Flags = &h0, Description = 437265617465732061206E657720696D6D757461626C6520617272617920776974682074686520676976656E2076616C7565732E0A44617461206D7573742062652061204E696C2D7465726D696E6174656420432D4172726179206F6620507472732C2063616C6C6261636B2063616E206265207573656420746F2072657461696E207468652076616C756573206F6E636520637265617465642E
		Sub Constructor(data as Xojo.Core.MemoryBlock = nil, count as int32 = 0, callbacks as appleblock = nil)
		  // Calling the overridden superclass constructor.
		  if count = 0 and data <> nil then count = data.Size/IntegerSize
		  Super.Constructor(CFArrayCreate(Nil, if (data <> nil, data.data, nil), count, _
		  if (callbacks = nil, nil, callbacks.Handle)), false, true)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 5265706F7274732077686574686572206F72206E6F7420612076616C756520697320696E20616E2061727261792E
		Function Contains(value as AppleGeneralObject, range as corefoundationframework.cfrange) As Boolean
		  return CFArrayContainsValue(mcftyperef, range, value.GeneralID)
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 5265706F7274732077686574686572206F72206E6F7420612076616C756520697320696E20616E2061727261792E
		Function Contains(value as CFStringRef, range as corefoundationframework.cfrange) As Boolean
		  dim myString as new AppleString(value)
		  return Contains(myString, range)
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 437265617465732061206E657720696D6D757461626C652061727261792077697468207468652076616C756573206F6620746869732061727261792E
		Function Copy() As AppleCFArray
		  Return AppleCFArray.MakefromCFTypeRef(CFArrayCreateCopy(nil, mcftypeRef), true, true)
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 53656172636865732074686520617272617920666F727761726420666F7220612076616C75652E
		Function Firstindex(Value as AppleGeneralObject, Range as corefoundationframework.cfrange) As Int32
		  Return CFArrayGetFirstIndexOfValue (mcftyperef, range, value.GeneralID)
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 536561726368657320746865206172726179206261636B7761726420666F7220612076616C75652E
		Function LastIndex(Value as AppleGeneralObject, Range as corefoundationframework.cfrange) As Int32
		  Return CFArrayGetLastIndexOfValue (mcftyperef, range, value.GeneralID)
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0
		Shared Function MakefromCFTypeRef(aCFTypeRef as ptr, dontretain as boolean = false, takeownership as Boolean = false) As AppleCFArray
		  return if (aCFTypeRef = nil, nil, new AppleCFarray(aCFTypeRef, dontretain, takeownership))
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 436F756E747320746865206E756D626572206F662074696D6573206120676976656E2076616C7565206F636375727320696E20616E2061727261792E
		Function Occurences(Value as AppleGeneralObject, Range as corefoundationframework.cfrange) As Int32
		  Return CFArrayGetCountOfValue (mcftyperef, range, value.GeneralID)
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 52657475726E73207468652070747220746F20746865206974656D20617420612073706563696669656420696E6465782E
		Function PtrAtIndex(Index as Int32) As Ptr
		  Return CFArrayGetValueAtIndex (mcftyperef, index)
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description
		Function TextAtIndex(Index as Int32) As Text
		  Dim result As ptr = CFArrayGetValueAtIndex (mcftyperef, index)
		  Dim mystring As AppleString = AppleString.MakefromPtr(result)
		  Return mystring.ToText
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 52657475726E7320612062756666657220776974682076616C7565732066726F6D20616E2061727261792E
		Function Values(range as corefoundationframework.cfrange) As Xojo.Core.MemoryBlock
		  dim result as new Xojo.Core.MutableMemoryBlock(range.Length* IntegerSize + 1)
		  CFArrayGetValues(mcftyperef, range, result.data)
		  return result
		End Function
	#tag EndMethod


	#tag ComputedProperty, Flags = &h0, Description = 546865206E756D626572206F66206974656D7320696E207468652061727261792028726561642D6F6E6C79292E
		#tag Getter
			Get
			  return values (CoreFoundationFramework.CFMakeRange(0, Count))
			End Get
		#tag EndGetter
		Allvalues As Xojo.Core.MemoryBlock
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h0, Description = 546865206E756D626572206F66206974656D7320696E207468652061727261792028726561642D6F6E6C79292E
		#tag Getter
			Get
			  return CFArrayGetCount(mcftyperef)
			End Get
		#tag EndGetter
		Count As Int32
	#tag EndComputedProperty


	#tag ViewBehavior
		#tag ViewProperty
			Name="CFTypeDescription"
			Group="Behavior"
			Type="Text"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Count"
			Group="Behavior"
			Type="Int32"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Description"
			Group="Behavior"
			Type="Text"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Hash"
			Group="Behavior"
			Type="UInteger"
		#tag EndViewProperty
		#tag ViewProperty
			Name="HasOwnership"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Index"
			Visible=true
			Group="ID"
			InitialValue="-2147483648"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="isNIL"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Left"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="mHasOwnership"
			Group="Behavior"
			Type="Boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Name"
			Visible=true
			Group="ID"
			Type="String"
		#tag EndViewProperty
		#tag ViewProperty
			Name="RetainCount"
			Group="Behavior"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Super"
			Visible=true
			Group="ID"
			Type="String"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Top"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="TypeID"
			Group="Behavior"
			Type="UInteger"
		#tag EndViewProperty
	#tag EndViewBehavior
End Class
#tag EndClass
