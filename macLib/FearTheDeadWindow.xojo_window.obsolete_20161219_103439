#tag Window
Begin Window FearTheDeadWindow
   BackColor       =   &cFFFFFF00
   Backdrop        =   0
   CloseButton     =   True
   Compatibility   =   ""
   Composite       =   False
   Frame           =   0
   FullScreen      =   False
   FullScreenButton=   True
   HasBackColor    =   False
   Height          =   400
   ImplicitInstance=   True
   LiveResize      =   True
   MacProcID       =   0
   MaxHeight       =   32000
   MaximizeButton  =   True
   MaxWidth        =   32000
   MenuBar         =   0
   MenuBarVisible  =   True
   MinHeight       =   64
   MinimizeButton  =   True
   MinWidth        =   64
   Placement       =   0
   Resizeable      =   True
   Title           =   "Untitled"
   Visible         =   True
   Width           =   600
   Begin OSXLibSKView OSXLibSKView1
      AcceptFocus     =   False
      AcceptTabs      =   False
      AcceptTouchEvents=   False
      AllowVibrancy   =   False
      Alpha           =   1.0
      AutoDeactivate  =   True
      Backdrop        =   0
      BackgroundColor =   &c000000FF
      BoundsRotation  =   0.0
      DoubleBuffer    =   False
      Enabled         =   True
      EraseBackground =   True
      FlippedCoordinates=   False
      FocusRingType   =   "Default"
      Height          =   400
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      Left            =   0
      LockBottom      =   True
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   True
      LockTop         =   True
      Scope           =   2
      TabIndex        =   0
      TabPanelIndex   =   0
      TabStop         =   True
      Top             =   0
      TrackSwipes     =   False
      TranslatesAutoresizingMaskIntoConstraints=   False
      Transparent     =   True
      UseFocusRing    =   True
      Visible         =   True
      Width           =   600
   End
End
#tag EndWindow

#tag WindowCode
	#tag Event
		Sub Open()
		  me.FullScreen = true
		End Sub
	#tag EndEvent


	#tag Method, Flags = &h1
		Protected Sub GameOver(didWin as Boolean)
		  OSXLibSKView1.AppleObject.Scene.Paused = true
		  dim menuScene as new AppleSKScene (OSXLibSKView1.AppleObject.FrameSize)
		  menuScene.ScaleMode = AppleSKScene.SKSceneScaleMode.FillProportional
		  menuScene.BackgroundColor = AppleColor.BlackColor
		  dim label as new AppleSKLabelNode("Press Space to play again!")
		  label.fontName = "AvenirNext-Bold"
		  label.fontSize = 55
		  label.fontColor = AppleColor.WhiteColor
		  label.position = menuScene.Frame.center
		  menuScene.AddChild label
		  
		  dim Soundaction as  AppleSKAction
		  if didWin then 
		    Soundaction = AppleSKAction.PlaySound("fear_win") 
		  else
		    Soundaction = AppleSKAction.PlaySound("fear_lose") 
		  end if
		  OSXLibSKView1.AppleObject.Scene.Paused = false
		  
		  OSXLibSKView1.AppleObject.PresentWithTransition menuScene, AppleSKTransition.FlipVertical(1)
		  menuScene.RunAction Soundaction
		  
		  'while Keyboard.AsyncKeyDown(&h31) = False
		  'app.DoEvents(50)
		  'wend
		  '
		  'dim GameScene as new AppleSKScene ("GameScene")
		  'GameScene.name ="GameScene"
		  'OSXLibSKView1.AppleObject.PresentWithTransition GameScene, AppleSKTransition.FlipVertical(1)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h1
		Protected Sub ResetPositions()
		  for q as integer = 0 to ZombieStartPositions.Ubound -1
		    Zombies(q).Position = ZombieStartPositions(q)
		  next
		  Player.Position = PlayerStartPos
		  UpdateCamera
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h1
		Protected Sub UpdateCamera()
		  me.OSXLibSKView1.AppleObject.Scene.Camera.Position = player.Position
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h1
		Protected Sub UpdatePlayer()
		  dim deltax, deltay as Double
		  if Keyboard.AsyncKeyDown(&h7B) then deltax = -1
		  if  Keyboard.AsyncKeyDown(&h7C) then deltax = 1
		  if  Keyboard.AsyncKeyDown(&h7D) then deltay = -1
		  if  Keyboard.AsyncKeyDown(&h7E) then deltay = 1
		  if deltax = 0 and deltay = 0 then
		    Player.PhysicsBody.Resting = true
		    return
		  end if
		  
		  dim  currentPosition as FoundationFrameWork.NSPoint = player.position
		  dim nextposition as FoundationFrameWork.NSPoint = FoundationFrameWork.NSMakePoint( _
		  currentPosition.x + deltax, currentPosition.y + deltay)
		  dim angle as double = atan2(currentPosition.y - nextposition.y, currentPosition.x - nextposition.x) + PI
		  dim rotateAction as AppleSKAction = appleSKAction.RotateToAngle(angle + PI*0.5, 0)
		  Player.RunAction rotateAction
		  dim velocityX as double= playerSpeed * cos(angle)
		  dim velocityY as double = playerSpeed * sin(angle)
		  
		  dim newVelocity as FoundationFrameWork.CGVector = FoundationFrameWork.CGMakeVector(velocityX, velocityY)
		  player.physicsBody.velocity = newVelocity
		  UpdateCamera
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h1
		Protected Sub UpdateZombies()
		  dim targetPosition as FoundationFrameWork.NSPoint = player.position
		  
		  for each zombie as AppleSKSpriteNode in zombies 
		    dim currentPosition as FoundationFrameWork.NSPoint = zombie.position
		    
		    dim angle as double = atan2(currentPosition.y - targetPosition.y, currentPosition.x - targetPosition.x) + pi
		    dim rotateAction as AppleSKAction = appleSKAction.RotatetoAngle(angle + PI*0.5, 0)
		    zombie.RunAction(rotateAction)
		    
		    dim velocityX as double = zombieSpeed * cos(angle)
		    dim velocityY as double = zombieSpeed * sin(angle)
		    
		    dim newVelocity as FoundationFrameWork.CGVector = FoundationFrameWork.cgmakevector ( velocityX, velocityY)
		    zombie.physicsBody.velocity = newVelocity
		  next
		End Sub
	#tag EndMethod


	#tag Property, Flags = &h1
		Protected GameScene As AppleSKScene
	#tag EndProperty

	#tag Property, Flags = &h1
		Protected Goal As AppleSKSpriteNode
	#tag EndProperty

	#tag Property, Flags = &h1
		Protected Pi As double = 3.141592653589793
	#tag EndProperty

	#tag Property, Flags = &h1
		Protected Player As AppleSKSpriteNode
	#tag EndProperty

	#tag Property, Flags = &h1
		Protected PlayerSpeed As Double = 150
	#tag EndProperty

	#tag Property, Flags = &h1
		Protected PlayerStartPos As FoundationFrameWork.NSPoint
	#tag EndProperty

	#tag Property, Flags = &h1
		Protected Zombies() As AppleSKSpriteNode
	#tag EndProperty

	#tag Property, Flags = &h1
		Protected ZombieSpeed As Double = 50
	#tag EndProperty

	#tag Property, Flags = &h1
		Protected ZombieStartPositions() As FoundationFrameWork.NSPoint
	#tag EndProperty


#tag EndWindowCode

#tag Events OSXLibSKView1
	#tag Event
		Sub Shown()
		  // Load the SKSCene from file
		  GameScene = new AppleSKScene("GameScene")
		  GameScene.Name = "GameSCene"
		  me.AppleObject.Present GameScene
		  // setup player node and make it the listener
		  player = new AppleSKSpriteNode(me.AppleObject.Scene.ChildNode("player").id)
		  me.AppleObject.Scene.Listener = player
		  PlayerStartPos = player.Position
		  // Search the zombies
		  for q as integer = 0 to me.AppleObject.Scene.children.Count -1
		    dim child as new AppleSKNode (me.AppleObject.Scene.Children.PtrAtIndex(q))
		    if child.name = "zombie" then
		      dim childnode as new AppleSKSpriteNode (child.id) // cast a Spritenode on it
		      // Add SKAudioNode to zombie
		      dim audioNode as new AppleSKAudioNode ( "fear_moan.wav")
		      childnode.addChild(audioNode)
		      ZombieStartPositions.Append childnode.Position
		      // add zombie to the array
		      zombies.append(childnode)
		    end if
		  next
		  
		  // Search the goal node
		  goal = new AppleSKSpriteNode(me.AppleObject.Scene.ChildNode("goal").id)
		  
		End Sub
	#tag EndEvent
	#tag Event , Description = 46697265732061742074686520626567696E6E696E67206F66207468652070726573656E746564207363656E6520757064617465206379636C652E
		Sub DidSimulatePhysics(Scene as AppleSKScene)
		  if scene.Name = "GameScene" and not scene.Paused then
		    UpdatePlayer
		    UpdateZombies
		  else
		    if Keyboard.AsyncKeyDown(&h31) then
		      ResetPositions
		      me.AppleObject.PresentWithTransition GameScene, AppleSKTransition.Doorway(1)
		      GameScene.Paused = false
		    end if
		    
		  end if
		End Sub
	#tag EndEvent
	#tag Event
		Sub ContactBegan(Contact As AppleSKPhysicsContact)
		  dim firstBody, secondBody  as appleSKPhysicsBody
		  
		  // 2. Assign the two physics bodies so that the one with the lower category is always stored in firstBody
		  if contact.bodyA.categoryBitMask < contact.bodyB.categoryBitMask then
		    firstBody = contact.bodyA
		    secondBody = contact.bodyB
		  else 
		    firstBody = contact.bodyB
		    secondBody = contact.bodyA
		  end if
		  
		  // 3. react to the contact between the two nodes
		  if firstBody.categoryBitMask = player.physicsBody.categoryBitMask and _
		    secondBody.categoryBitMask = zombies(0).physicsBody.categoryBitMask then
		    // Player & Zombie
		    gameOver(false)
		  elseif firstBody.categoryBitMask = player.physicsBody.categoryBitMask and _
		    secondBody.categoryBitMask = goal.physicsBody.categoryBitMask then
		    // Player & Goal
		    gameOver(true)
		  end if
		  
		End Sub
	#tag EndEvent
#tag EndEvents
#tag ViewBehavior
	#tag ViewProperty
		Name="BackColor"
		Visible=true
		Group="Background"
		InitialValue="&hFFFFFF"
		Type="Color"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Backdrop"
		Visible=true
		Group="Background"
		Type="Picture"
		EditorType="Picture"
	#tag EndViewProperty
	#tag ViewProperty
		Name="CloseButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Composite"
		Group="OS X (Carbon)"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Frame"
		Visible=true
		Group="Frame"
		InitialValue="0"
		Type="Integer"
		EditorType="Enum"
		#tag EnumValues
			"0 - Document"
			"1 - Movable Modal"
			"2 - Modal Dialog"
			"3 - Floating Window"
			"4 - Plain Box"
			"5 - Shadowed Box"
			"6 - Rounded Window"
			"7 - Global Floating Window"
			"8 - Sheet Window"
			"9 - Metal Window"
			"11 - Modeless Dialog"
		#tag EndEnumValues
	#tag EndViewProperty
	#tag ViewProperty
		Name="FullScreen"
		Group="Behavior"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="FullScreenButton"
		Visible=true
		Group="Frame"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="HasBackColor"
		Visible=true
		Group="Background"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Height"
		Visible=true
		Group="Size"
		InitialValue="400"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="ImplicitInstance"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Interfaces"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="LiveResize"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MacProcID"
		Group="OS X (Carbon)"
		InitialValue="0"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaxHeight"
		Visible=true
		Group="Size"
		InitialValue="32000"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaximizeButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MaxWidth"
		Visible=true
		Group="Size"
		InitialValue="32000"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MenuBar"
		Visible=true
		Group="Menus"
		Type="MenuBar"
		EditorType="MenuBar"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MenuBarVisible"
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinHeight"
		Visible=true
		Group="Size"
		InitialValue="64"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinimizeButton"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="MinWidth"
		Visible=true
		Group="Size"
		InitialValue="64"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Name"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Placement"
		Visible=true
		Group="Behavior"
		InitialValue="0"
		Type="Integer"
		EditorType="Enum"
		#tag EnumValues
			"0 - Default"
			"1 - Parent Window"
			"2 - Main Screen"
			"3 - Parent Window Screen"
			"4 - Stagger"
		#tag EndEnumValues
	#tag EndViewProperty
	#tag ViewProperty
		Name="Resizeable"
		Visible=true
		Group="Frame"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Super"
		Visible=true
		Group="ID"
		Type="String"
		EditorType="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Title"
		Visible=true
		Group="Frame"
		InitialValue="Untitled"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Visible"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Width"
		Visible=true
		Group="Size"
		InitialValue="600"
		Type="Integer"
	#tag EndViewProperty
#tag EndViewBehavior
