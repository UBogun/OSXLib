#tag Class
Protected Class AppleSKTileSet
Inherits AppleObject
	#tag Method, Flags = &h0, Description = 496E697469616C697A65732061206E65772074696C6520736574207769746820616E206172726179206F662074696C652067726F75707320616E642072656374616E67756C61722067726964206C61796F75742E
		Sub Constructor(TileSetGroup as AppleArray)
		  // Calling the overridden superclass constructor.
		  // Note that this may need modifications if there are multiple constructor choices.
		  // Possible constructor calls:
		  // Constructor() -- From AppleObject
		  // Constructor(aPtr as Ptr) -- From AppleObject
		  // Constructor(aPtr as Ptr, takeOwnership as Boolean, Retain as Boolean = false) -- From AppleObject
		  Super.Constructor(initWithTileGroups(alloc(classptr), TileSetGroup.id), true)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 496E697469616C697A65732061206E65772074696C6520736574207769746820616E206172726179206F662074696C652067726F75707320616E6420737065636966696564206C61796F75742E
		Sub Constructor(TileSetGroup as AppleArray, type as SKTileSetType)
		  // Calling the overridden superclass constructor.
		  // Note that this may need modifications if there are multiple constructor choices.
		  // Possible constructor calls:
		  // Constructor() -- From AppleObject
		  // Constructor(aPtr as Ptr) -- From AppleObject
		  // Constructor(aPtr as Ptr, takeOwnership as Boolean, Retain as Boolean = false) -- From AppleObject
		  Super.Constructor(initWithTileGroupsTileSetType(alloc(classptr), TileSetGroup.id, type), true)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub Constructor(URL As AppleURL)
		  // Calling the overridden superclass constructor.
		  // Note that this may need modifications if there are multiple constructor choices.
		  // Possible constructor calls:
		  // Constructor() -- From AppleObject
		  // Constructor(aPtr as Ptr) -- From AppleObject
		  // Constructor(aPtr as Ptr, takeOwnership as Boolean, Retain as Boolean = false) -- From AppleObject
		  Super.Constructor(tileSetFromURL(classptr, url.id), true, true)
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0, Description = 496E697469616C697A65732061206E65772074696C65207365742066726F6D20612074696C652073657420776974682074686520737065636966696564206E616D652066726F6D20746865205370726974654B6974207265736F757263652062756E646C652E
		Sub Constructor(TilesetName as CFStringRef)
		  // Calling the overridden superclass constructor.
		  // Note that this may need modifications if there are multiple constructor choices.
		  // Possible constructor calls:
		  // Constructor() -- From AppleObject
		  // Constructor(aPtr as Ptr) -- From AppleObject
		  // Constructor(aPtr as Ptr, takeOwnership as Boolean, Retain as Boolean = false) -- From AppleObject
		  Super.Constructor(tileSetNamed(classptr, TilesetName), true, true)
		  
		End Sub
	#tag EndMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function getdefaultTileGroup Lib SpriteKitLibName Selector "defaultTileGroup" (id as Ptr) As Ptr
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function getdefaultTileSize Lib SpriteKitLibName Selector "defaultTileSize" (id as Ptr) As FoundationFrameWork.NSSize
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function gettileGroups Lib SpriteKitLibName Selector "tileGroups" (id as Ptr) As Ptr
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function gettype Lib SpriteKitLibName Selector "type" (id as Ptr) As SKTileSetType
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function initWithTileGroups Lib SpriteKitLibName Selector "initWithTileGroups:" (id as ptr, group as ptr) As Ptr
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function initWithTileGroupsTileSetType Lib SpriteKitLibName Selector "initWithTileGroups:tileSetType:" (id as ptr, group as ptr, Type as SKTileSetType) As Ptr
	#tag EndExternalMethod

	#tag Method, Flags = &h0
		Shared Function MAkeFromPtr(aPtr as Ptr) As AppleSKTileSet
		  return if (aptr = nil, nil, new AppleSKTileSet(aptr))
		End Function
	#tag EndMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Sub setdefaultTileGroup Lib SpriteKitLibName Selector "setDefaultTileGroup:" (id as ptr, value as ptr)
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Sub setdefaultTileSize Lib SpriteKitLibName Selector "setDefaultTileSize:" (id as Ptr, value as FoundationFrameWork . NSSize)
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Sub settileGroups Lib SpriteKitLibName Selector "setTileGroups:" (id as ptr, value as ptr)
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Sub settype Lib SpriteKitLibName Selector "setType:" (id as Ptr, value as SKTileSetType)
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function tileSetFromURL Lib SpriteKitLibName Selector "tileSetFromURL:" (id as ptr, url as ptr) As Ptr
	#tag EndExternalMethod

	#tag ExternalMethod, Flags = &h1
		Protected Declare Function tileSetNamed Lib SpriteKitLibName Selector "tileSetNamed:" (id as ptr, SetName as CFStringRef) As Ptr
	#tag EndExternalMethod


	#tag Note, Name = Status complete
		
		Available sinde macOS 10.12/iOS 10.0
	#tag EndNote


	#tag ComputedProperty, Flags = &h0
		#tag Getter
			Get
			  return classptr <> nil
			End Get
		#tag EndGetter
		Shared ClassAvailable As Boolean
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h1
		#tag Getter
			Get
			  static mClassPtr as Ptr
			  if mClassPtr = nil then
			    if AppleSKView.classavailable then
			      mClassPtr  =  FoundationFramework.NSClassFromString ("SKTileSet")
			    end if
			  end if
			  return mClassPtr
			End Get
		#tag EndGetter
		Protected Shared ClassPtr As Ptr
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h0, Description = 5468652074696C652073657427732064656661756C742074696C652067726F75702E
		#tag Getter
			Get
			  return AppleSKTileGroup.MakeFromPtr(getdefaultTileGroup(mid))
			End Get
		#tag EndGetter
		#tag Setter
			Set
			  setdefaultTileGroup mid, nilptr(value)
			End Set
		#tag EndSetter
		DefaultTileGroup As AppleSKTileGroup
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h0, Description = 5468652074696C652073657427732064656661756C742074696C652073697A652E
		#tag Getter
			Get
			  return getdefaultTileSize(mid)
			End Get
		#tag EndGetter
		#tag Setter
			Set
			  setdefaultTilesize mid, value
			End Set
		#tag EndSetter
		DefaultTileSize As FoundationFrameWork.NSSize
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h0, Description = 41206E616D65206173736F6369617465642077697468207468652074696C65207365742E
		#tag Getter
			Get
			  return FoundationFrameWork.getName (mid)
			End Get
		#tag EndGetter
		#tag Setter
			Set
			  FoundationFrameWork.setname mid, value
			End Set
		#tag EndSetter
		Name As Text
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h0, Description = 5468652074696C65207365742773206172726179206F662074696C652067726F7570206F626A656374732E
		#tag Getter
			Get
			  return AppleArray.MakeFromPtr(gettileGroups(mid))
			End Get
		#tag EndGetter
		#tag Setter
			Set
			  settileGroups mid, nilptr(value)
			End Set
		#tag EndSetter
		TileGroups As AppleArray
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h0, Description = 5468652074696C6520736574277320747970652E
		#tag Getter
			Get
			  return gettype(mid)
			End Get
		#tag EndGetter
		#tag Setter
			Set
			  settype mid, value
			End Set
		#tag EndSetter
		Type As AppleSKTileSet.SKTileSetType
	#tag EndComputedProperty

	#tag ComputedProperty, Flags = &h0, Description
		#tag Getter
			Get
			  return AppleMutableDictionary.MakeFromPtr (SpriteKitFramework.getuserData(mid))
			End Get
		#tag EndGetter
		#tag Setter
			Set
			  SpriteKitFramework.setuserData mid, if (value = nil, nil, value.id)
			End Set
		#tag EndSetter
		UserData As AppleMutableDictionary
	#tag EndComputedProperty


	#tag Enum, Name = SKTileSetType, Type = Integer, Flags = &h0
		Grid = 0
		  Isometric = 1
		  HexagonalFlat = 2
		HexagonalPointy = 3
	#tag EndEnum


	#tag ViewBehavior
		#tag ViewProperty
			Name="DebugDescription"
			Group="Behavior"
			Type="Text"
		#tag EndViewProperty
		#tag ViewProperty
			Name="HasOwnership"
			Group="Behavior"
			Type="boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Index"
			Visible=true
			Group="ID"
			InitialValue="-2147483648"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Left"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="mHasOwnership"
			Group="Behavior"
			Type="boolean"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Name"
			Visible=true
			Group="ID"
			Type="String"
		#tag EndViewProperty
		#tag ViewProperty
			Name="RetainCount"
			Group="Behavior"
			Type="UInteger"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Super"
			Visible=true
			Group="ID"
			Type="String"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Top"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
		#tag EndViewProperty
		#tag ViewProperty
			Name="Type"
			Group="Behavior"
			Type="AppleSKTileSet.SKTileSetType"
			EditorType="Enum"
			#tag EnumValues
				"0 - Grid"
				"1 - Isometric"
				"2 - HexagonalFlat"
				"3 - HexagonalPointy"
			#tag EndEnumValues
		#tag EndViewProperty
	#tag EndViewBehavior
End Class
#tag EndClass
